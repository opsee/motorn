env JWE_KEY_FILE;
env UPSTREAMS;
env STREAMING_UPSTREAMS;
env RESOLVERS;

worker_processes 1;

events { worker_connections 1024; }

http {
  lua_ssl_trusted_certificate "/etc/ssl/certs/ca-certificates.crt";
  lua_ssl_verify_depth 2;
  lua_package_path "$prefix/lualib/?.lua;;";

  lua_shared_dict locks 1M;
  lua_shared_dict cache 10M;
  lua_shared_dict api_routes 1M;
  lua_shared_dict swagger 1M;
  lua_shared_dict resolver 1M;
  lua_socket_log_errors off;

  # see https://github.com/openresty/lua-resty-core
  init_by_lua '
    require "resty.core"
    cjson = require("cjson")
    jose = require("jose")
    http = require("resty.http")
    locker = require("resty.lock")
  ';

  index index.html index.htm;

  include mime.types;

  gzip              on;
  gzip_comp_level    5;
  gzip_http_version 1.1;
  gzip_proxied      any;
  gzip_min_length   500;
  gzip_disable      "MSIE [1-6]\.";
  gzip_types        text/plain
                    text/xml
                    text/css
                    text/comma-separated-values
                    text/javascript
                    application/x-javascript
                    application/atom+xml
                    application/javascript
                    application/json
                    application/rss+xml
                    application/vnd.ms-fontobject
                    application/x-font-ttf
                    application/x-web-app-manifest+json
                    application/xhtml+xml
                    application/xml
                    font/opentype
                    image/svg+xml
                    image/x-icon
                    text/x-component;
  
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_iso8601] $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /dev/stdout main;
  sendfile on;
  tcp_nopush on;
  server_names_hash_bucket_size 128;

  resolver 169.254.169.253 valid=1s;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  server {
    server_name myst.*;
    listen 8083;
    root html;
    default_type text/html;
    keepalive_timeout 75s;
    proxy_ssl_server_name on;
    
    location / {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_pass https://myst.in.opsee.com$request_uri;
    }
  }

  server {
    server_name api.*;
    listen 8083 default_server;
    root html;
    set $template_root templates;
    set $compost https://compost.in.opsee.com;
    default_type text/html;
    keepalive_timeout 75s;
    proxy_ssl_server_name on;

    location / {
      set $target '';
      set $ssl_name '';
      access_by_lua_file lualib/access_router.lua;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_ssl_name $ssl_name;
      proxy_pass $target$request_uri;
    }

    location /graphql {
      access_by_lua_file lualib/access_graphql.lua;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_pass $compost$request_uri;
    }

    location /api/swagger.json {
      add_header Content-Type application/json;
      access_by_lua 'local user = true';
      content_by_lua_file lualib/swagger.lua;
    }

    location /stream/ {
      set $target '';
      set $ssl_name '';
      access_by_lua_file lualib/stream_access_router.lua;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_read_timeout 180s;
      proxy_ssl_name $ssl_name;
      proxy_pass $target$request_uri;
    }

    location = /health {
      access_by_lua 'local user = true';
      return 200;
      access_log off;
    }

    location /_preload {
      internal;
      access_by_lua 'local user = true';
      content_by_lua_file lualib/preload_router.lua;
    }

    location /_assets {
      access_by_lua 'local user = true';
      try_files $uri =404;
    }

    location /_debug {
      access_by_lua 'local user = jose.auth_by_header()';
      content_by_lua_file lualib/debug.lua;
    }
  }
}
